allprojects {
  group = 'edu.zhangfan.uci'
  version = '1.0-SNAPSHOT'
  gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
      options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
  }
}

subprojects {
  apply plugin: 'java'
  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
    mavenLocal()
    maven { url "http://repo.maven.apache.org/maven2" }
  }

  dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: '2.2.4'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
  }
}

// install everything
task installGrid(type: Exec) {
  workingDir(project.projectDir)
  commandLine("bin/grid", "install", "all")
  outputs.upToDateWhen {
    ["kafka", "zookeeper", "yarn"].every {
      (new File(project.projectDir, "deploy/" + it)).exists()
    }
  }
}

task startGrid(dependsOn: installGrid, type: Exec) {
  workingDir(project.projectDir)
  commandLine("bin/grid", "start", "all")
  outputs.upToDateWhen {
    // use running zookeeper as proxy
    File zookeeperPidFile = new File("/tmp/zookeeper/zookeeper_server.pid")
    zookeeperPidFile.exists() &&
        "kill -0 ${zookeeperPidFile.text}".execute().waitFor() == 0
  }
}

task stopGrid(dependsOn: installGrid, type: Exec) {
  workingDir(project.projectDir)
  commandLine("bin/grid", "stop", "all")
}

class SamzaTask extends DefaultTask {
  String configFile;

  @TaskAction
  def startSamza() {
    project.exec {
      workingDir(project.projectDir)
      commandLine("deploy/samza/bin/run-job.sh",
          "--config-factory=org.apache.samza.config.factories.PropertiesConfigFactory",
          "--config-path=file://${project.projectDir}/deploy/samza/config/${configFile}")
    }
  }
}

task runDriverMatch(dependsOn: [startGrid, 'samza:deploy'], type: SamzaTask) {
  configFile("driverMatchTask.properties")
}

task listKafkaTopics(dependsOn: startGrid, type: Exec) {
  workingDir(project.projectDir)
  commandLine("deploy/kafka/bin/kafka-topics.sh",
      "--zookeeper", "localhost:2181",
      "--list")
}

// helper task to monitor a Kafka topic
class KafkaDumpTask extends DefaultTask {
  String topic;

  @TaskAction
  def dumpTopic() {
    project.exec {
      workingDir(project.projectDir)
      commandLine("deploy/kafka/bin/kafka-console-consumer.sh",
          "--zookeeper", "localhost:2181",
          "--topic", "${topic}")
    }
  }
}

// helper to dump the wikipedia-raw topic
task dumpWikiRaw(dependsOn: startGrid, type: KafkaDumpTask) {
  topic("wikipedia-raw")
}




